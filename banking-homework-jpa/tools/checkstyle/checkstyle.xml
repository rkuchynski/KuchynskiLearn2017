<?xml version="1.0"?>
<!--
 !_____________________________________________________________________________
 !
 !   All CheckStyle checks, with defaults explicitly stated.
 !
 !   Can be used as a starting point for custom rule sets.
 !_____________________________________________________________________________
 !-->
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<module name="Checker">

    <module name="SuppressionFilter">
        <property name="file" value="${samedir}/suppressions.xml"/>
    </module>

    <!-- Checks whether files end with a new line.                        !-->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile !-->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator"  value="system"/>
        <property name="fileExtensions" value="*.*"/>
    </module>

    <!-- Checks for long source files. !-->
    <!-- See http://checkstyle.sf.net/config_sizes.html !-->
    <module name="FileLength">
        <property name="max" value="500"/>
        <property name="fileExtensions" value=""/>
        <property name="severity" value="warning"/>
    </module>


    <!-- Checks that there are no tab characters ('\t') in the source code. !-->
    <!-- See http://checkstyle.sourceforge.net/config_whitespace.html#FileTabCharacter !-->
    <module name="FileTabCharacter">
        <property name="eachLine"       value="false"/>
        <property name="fileExtensions" value="*.java,*.xml"/>
    </module>


    <module name="TreeWalker">


        <!-- Checks for empty blocks. !-->
        <!-- See http://checkstyle.sf.net/config_blocks.html !-->
        <module name="EmptyBlock">
            <property name="option" value="stmt"/>
            <property name="tokens" value="LITERAL_CATCH, LITERAL_DO,
                                           LITERAL_ELSE, LITERAL_FINALLY, LITERAL_IF, LITERAL_FOR,
                                           LITERAL_TRY, LITERAL_WHILE, INSTANCE_INIT, STATIC_INIT"/>
        </module>

        <!-- Checks for braces around code blocks. !-->
        <!-- See http://checkstyle.sf.net/config_blocks.html !-->
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_IF, LITERAL_FOR, LITERAL_WHILE"/>
        </module>

        <!-- Checks that a class which has only private constructors is declared as final. !-->
        <!-- See http://checkstyle.sf.net/config_design.html !-->
        <module name="FinalClass">
            <property name="severity" value="warning"/>
        </module>

        <!-- Detects empty statements (standalone ;). !-->
        <!-- See http://checkstyle.sf.net/config_coding.html !-->
        <module name="EmptyStatement"/>

        <!-- Checks that any combination of String literals with optional assignment is on the left side of an equals() comparison. !-->
        <!-- See http://checkstyle.sourceforge.net/config_coding.html#EqualsAvoidNull !-->
        <module name="EqualsAvoidNull"/>

        <!-- Checks that classes that override equals() also override hashCode(). !-->
        <!-- See http://checkstyle.sf.net/config_coding.html !-->
        <module name="EqualsHashCode"/>

        <!-- Checks for fall through in switch statements Finds locations where a case contains Java code ... !-->
        <!-- but lacks a break, return, throw or continue statement. !-->
        <!-- See http://checkstyle.sf.net/config_coding.html !-->
        <module name="FallThrough">
            <property name="checkLastCaseGroup" value="false"/>
            <property name="reliefPattern"      value="fallthru|falls??through"/>
        </module>

        <!-- Checks that a local variable or a parameter does not shadow a field that is defined in the same class. !-->
        <!-- See http://checkstyle.sf.net/config_coding.html !-->
        <module name="HiddenField">
            <property name="tokens"                     value="PARAMETER_DEF, VARIABLE_DEF"/>
            <property name="ignoreConstructorParameter" value="false"/>
            <property name="ignoreSetter"               value="false"/>
            <property name="ignoreAbstractMethods"      value="false"/>
        </module>

        <!-- Catching java.lang.Exception, java.lang.Error or java.lang.RuntimeException is almost never acceptable. !-->
        <!-- See http://checkstyle.sf.net/config_coding.html !-->
        <module name="IllegalCatch">
            <property name="illegalClassNames" value="java.lang.Exception, java.lang.Throwable, java.lang.RuntimeException"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- This check can be used to ensure that types are not declared to be thrown. !-->
        <!-- Declaring to throw java.lang.Error or java.lang.RuntimeException is almost never acceptable. !-->
        <!-- See http://checkstyle.sourceforge.net/config_coding.html#IllegalThrows !-->
        <module name="IllegalThrows">
            <property name="illegalClassNames" value="java.lang.Throwable, java.lang.Error, java.lang.RuntimeException"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Checks that there are no "magic numbers", where a magic number is a numeric literal !-->
        <!-- that is not defined as a constant. !-->
        <!-- See http://checkstyle.sf.net/config_coding.html !-->
        <module name="MagicNumber">
            <property name="tokens"               value="NUM_DOUBLE, NUM_FLOAT, NUM_INT, NUM_LONG"/>
            <property name="ignoreNumbers"        value="-1, 0, 1"/>
            <property name="ignoreHashCodeMethod" value="false"/>
        </module>

        <!-- Check for ensuring that for loop control variables are not modified inside the for block. !-->
        <!-- See http://checkstyle.sourceforge.net/config_coding.html#ModifiedControlVariable !-->
        <module name="ModifiedControlVariable"/>

        <!-- Checks for multiple occurrences of the same string literal within a single file. !-->
        <!-- See http://checkstyle.sourceforge.net/config_coding.html#MultipleStringLiterals !-->
        <module name="MultipleStringLiterals">
            <property name="allowedDuplicates"       value="2"/>
            <property name="ignoreStringsRegexp"     value='^""$'/>
            <property name="ignoreOccurrenceContext" value="ANNOTATION"/>
            <property name="severity" value="warning"/>
        </module>

        <!-- Checks that string literals are not used with == or !=. !-->
        <!-- See http://checkstyle.sf.net/config_coding.html !-->
        <module name="StringLiteralEquality"/>

        <!-- Checks that an overriding clone() method invokes super.clone(). !-->
        <!-- See http://checkstyle.sf.net/config_coding.html !-->
        <module name="SuperClone"/>

        <!-- Checks that an overriding finalize() method invokes super.finalize(). !-->
        <!-- See http://checkstyle.sf.net/config_coding.html !-->
        <module name="SuperFinalize"/>

        <!--
         !________________________________________________________________________________________
         !
         !     I M P O R T S
         !________________________________________________________________________________________
         !-->
        <!-- Checks for imports from a set of illegal packages. !-->
        <!-- See http://checkstyle.sf.net/config_import.html !-->
        <module name="IllegalImport">
            <property name="illegalPkgs" value="sun"/>
        </module>

        <!-- Checks for redundant import statements. !-->
        <!-- See http://checkstyle.sf.net/config_import.html !-->
        <module name="RedundantImport"/>

        <!-- Checks for unused import statements. !-->
        <!-- See http://checkstyle.sf.net/config_import.html !-->
        <module name="UnusedImports"/>


        <!--
         !________________________________________________________________________________________
         !
         !     J A V A D O C S
         !________________________________________________________________________________________
         !-->
        <!-- Checks to ensure that the javadoc tags exist (if required) !-->
        <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocMethod !-->
        <module name="JavadocMethod">
            <property name="scope"                        value="public"/>
            <property name="allowUndeclaredRTE"           value="true"/>
            <property name="allowThrowsTagsForSubclasses" value="true"/>
            <property name="allowMissingParamTags"        value="false"/>
            <property name="allowMissingThrowsTags"       value="false"/>
            <property name="allowMissingReturnTag"        value="false"/>
            <property name="allowMissingJavadoc"          value="false"/>
            <property name="allowMissingPropertyJavadoc"  value="true"/>
            <property name="logLoadErrors"                value="true"/>
            <property name="suppressLoadErrors"           value="false"/>
            <property name="tokens"                       value="METHOD_DEF, CTOR_DEF"/>
        </module>

        <!-- Validates Javadoc comments to help ensure they are well formed. !-->
        <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocStyle !-->
        <module name="JavadocStyle">
            <property name="scope"               value="private"/>
            <property name="checkFirstSentence"  value="true"/>
            <property name="checkEmptyJavadoc"   value="false"/>
            <property name="checkHtml"           value="true"/>
            <property name="tokens"              value="INTERFACE_DEF, CLASS_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>

        <!--
         !________________________________________________________________________________________
         !
         !     M I S C E L L A N E O U S
         !________________________________________________________________________________________
         !-->
        <!-- Checks the style of array type definitions. !-->
        <!-- See http://checkstyle.sf.net/config_misc.html !-->
        <module name="ArrayTypeStyle">
            <property name="javaStyle" value="true"/>
        </module>

        <!-- Checks correct indentation of Java Code. !-->
        <!-- See http://checkstyle.sf.net/config_misc.html !-->
        <module name="Indentation">
            <property name="basicOffset"     value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent"      value="4"/>
        </module>

        <!-- Checks that the outer type name and the file name match. !-->
        <!-- See http://checkstyle.sourceforge.net/config_misc.html#OuterTypeFilename !-->
        <module name="OuterTypeFilename"/>

        <!-- A check for TODO: comments. Actually it is a generic regular expression matcher on Java comments. !-->
        <!-- See http://checkstyle.sf.net/config_misc.html !-->
        <module name="TodoComment">
            <property name="format" value="TODO:"/>
        </module>

        <!-- Checks that long constants are defined with an upper ell. That is 'L' and not 'l'. !-->
        <!-- See http://checkstyle.sf.net/config_misc.html !-->
        <module name="UpperEll"/>


        <!--
         !________________________________________________________________________________________
         !
         !     M O D I F I E R S
         !________________________________________________________________________________________
         !-->
        <!-- Checks that the order of modifiers conforms to the suggestions in the Java Language specification, !-->
        <!-- sections 8.1.1, 8.3.1 and 8.4.3. !-->
        <!-- See http://checkstyle.sf.net/config_modifiers.html !-->
        <module name="ModifierOrder"/>

        <!-- Checks that there are no redundant modifiers. !-->
        <!-- See http://checkstyle.sf.net/config_modifiers.html !-->
        <module name="RedundantModifier">
            <property name="tokens" value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF"/>
        </module>


        <!--
         !________________________________________________________________________________________
         !
         !     N A M I N G   C O N V E N T I O N S
         !________________________________________________________________________________________
         !-->
        <!-- Checks for class type parameter name naming conventions. !-->
        <!-- See http://checkstyle.sourceforge.net/config_naming.html#ClassTypeParameterName !-->
        <module name="ClassTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
        </module>

        <!-- Checks for constant name naming conventions. !-->
        <!-- See http://checkstyle.sf.net/config_naming.html !-->
        <module name="ConstantName">
            <property name="format"           value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
            <property name="applyToPublic"    value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage"   value="true"/>
            <property name="applyToPrivate"   value="true"/>
        </module>

        <!-- Checks for local final variable name naming conventions. !-->
        <!-- See http://checkstyle.sf.net/config_naming.html !-->
        <module name="LocalFinalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="tokens" value="VARIABLE_DEF, PARAMETER_DEF"/>
        </module>

        <!-- Checks for local variable name naming conventions. !-->
        <!-- See http://checkstyle.sf.net/config_naming.html !-->
        <module name="LocalVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="tokens" value="PARAMETER_DEF"/>
        </module>

        <!-- Checks for member variable name naming conventions. !-->
        <!-- See http://checkstyle.sf.net/config_naming.html !-->
        <module name="MemberName">
            <property name="format"           value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="applyToPublic"    value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage"   value="true"/>
            <property name="applyToPrivate"   value="true"/>
        </module>

        <!-- Checks for method name naming conventions. !-->
        <!-- See http://checkstyle.sf.net/config_naming.html !-->
        <module name="MethodName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Checks for method type parameter name naming conventions. !-->
        <!-- See http://checkstyle.sourceforge.net/config_naming.html#MethodTypeParameterName !-->
        <module name="MethodTypeParameterName">
            <property name="format" value="^[A-Z]$"/>
        </module>

        <!-- Checks for package name naming conventions. !-->
        <!-- See http://checkstyle.sf.net/config_naming.html !-->
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$"/>
        </module>

        <!-- Checks for parameter name naming conventions. !-->
        <!-- See http://checkstyle.sf.net/config_naming.html !-->
        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
        </module>

        <!-- Checks for static variable name naming conventions. !-->
        <!-- See http://checkstyle.sf.net/config_naming.html !-->
        <module name="StaticVariableName">
            <property name="format"           value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="applyToPublic"    value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage"   value="true"/>
            <property name="applyToPrivate"   value="true"/>
        </module>

        <!-- Checks for type name naming conventions. !-->
        <!-- See http://checkstyle.sf.net/config_naming.html !-->
        <module name="TypeName">
            <property name="format"           value="^[A-Z][a-zA-Z0-9]*$"/>
            <property name="tokens"           value="CLASS_DEF, INTERFACE_DEF"/>
            <property name="applyToPublic"    value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPackage"   value="true"/>
            <property name="applyToPrivate"   value="true"/>
        </module>



        <!--
         !________________________________________________________________________________________
         !
         !     S I Z E   V I O L A T I O N S
         !________________________________________________________________________________________
         !-->
        <!-- See http://checkstyle.sf.net/config_sizes.html !-->
        <!-- Checks for long lines. !-->
        <module name="LineLength">
            <property name="ignorePattern" value="^import.*$"/>
            <property name="max"           value="120"/>
        </module>

        <!-- Checks the number of parameters of a method or constructor. !-->
        <!-- See http://checkstyle.sf.net/config_sizes.html !-->
        <module name="ParameterNumber">
            <property name="max"    value="5"/>
            <property name="tokens" value="METHOD_DEF, CTOR_DEF"/>
        </module>

    </module>

</module>
